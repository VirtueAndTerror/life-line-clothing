{"ast":null,"code":"var _jsxFileName = \"/home/arnaldo/web-projects/portfolio/my-app/src/components/cart-dropdown/CartDropdown.tsx\",\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport CustomButton from '../custom-button/CustomButton';\nimport CartItem from '../cart-item/CartItem';\nimport { selectCartItems } from '../../redux/cart/cart-selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart-actions';\nimport './cart-dropdown.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = _ref => {\n  _s();\n\n  let {\n    cartItems\n  } = _ref;\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\",\n      children: cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n        item: cartItem\n      }, cartItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"empty-msg\",\n        children: \"Your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      onClick: () => navigate('checkout'),\n      children: \"GO TO CHECKOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Cart;\n\nconst mapStateToProps = state => ({\n  cartItems: selectCartItems(state)\n});\n\nconst connector = connect(mapStateToProps, {\n  toggleCartHidden\n});\nexport default _c2 = connector(Cart);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cart\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/my-app/src/components/cart-dropdown/CartDropdown.tsx"],"names":["connect","useNavigate","CustomButton","CartItem","selectCartItems","toggleCartHidden","Cart","cartItems","navigate","length","map","cartItem","id","mapStateToProps","state","connector"],"mappings":";;;AAAA,SAASA,OAAT,QAAwC,aAAxC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,SAASC,eAAT,QAAgC,iCAAhC;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;AAIA,OAAO,sBAAP;;;AAIA,MAAMC,IAAI,GAAG,QAA8B;AAAA;;AAAA,MAA7B;AAAEC,IAAAA;AAAF,GAA6B;AACzC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACGM,SAAS,CAACE,MAAV,GACCF,SAAS,CAACG,GAAV,CAAeC,QAAD,iBACZ,QAAC,QAAD;AAA4B,QAAA,IAAI,EAAEA;AAAlC,SAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cADF,CADD,gBAKC;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MAAMJ,QAAQ,CAAC,UAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAlBD;;GAAMF,I;UACaL,W;;;KADbK,I;;AAoBN,MAAMO,eAAe,GAAIC,KAAD,KAAuB;AAC7CP,EAAAA,SAAS,EAAEH,eAAe,CAACU,KAAD;AADmB,CAAvB,CAAxB;;AAIA,MAAMC,SAAS,GAAGf,OAAO,CAACa,eAAD,EAAkB;AAAER,EAAAA;AAAF,CAAlB,CAAzB;AAIA,qBAAeU,SAAS,CAACT,IAAD,CAAxB","sourcesContent":["import { connect, ConnectedProps } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport CustomButton from '../custom-button/CustomButton';\nimport CartItem from '../cart-item/CartItem';\n\nimport { selectCartItems } from '../../redux/cart/cart-selectors';\n\nimport { toggleCartHidden } from '../../redux/cart/cart-actions';\n\nimport type { RootState } from '../../redux/store';\n\nimport './cart-dropdown.scss';\n\ninterface CartProps extends PropsFormRedux {}\n\nconst Cart = ({ cartItems }: CartProps) => {\n  const navigate = useNavigate();\n  return (\n    <div className='cart-dropdown'>\n      <div className='cart-items'>\n        {cartItems.length ? (\n          cartItems.map((cartItem) => (\n            <CartItem key={cartItem.id} item={cartItem} />\n          ))\n        ) : (\n          <span className='empty-msg'>Your cart is empty</span>\n        )}\n      </div>\n      <CustomButton onClick={() => navigate('checkout')}>\n        GO TO CHECKOUT\n      </CustomButton>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  cartItems: selectCartItems(state),\n});\n\nconst connector = connect(mapStateToProps, { toggleCartHidden });\n\ntype PropsFormRedux = ConnectedProps<typeof connector>;\n\nexport default connector(Cart);\n"]},"metadata":{},"sourceType":"module"}