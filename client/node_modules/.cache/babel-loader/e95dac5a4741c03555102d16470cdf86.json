{"ast":null,"code":"var _jsxFileName = \"/home/arnaldo/web-projects/portfolio/life-line-app/src/components/private-route/PrivateRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentUser } from '../../redux/user/user-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    redirectTo\n  } = _ref;\n  const currentUser = useSelector(selectCurrentUser);\n  let location = useLocation();\n  console.log({\n    currentUser\n  });\n  if (currentUser) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: redirectTo,\n    state: {\n      from: location\n    },\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n\n_s(PrivateRoute, \"V+l44spZWH4NGYTpljvJtC2YHps=\", false, function () {\n  return [useSelector, useLocation];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/components/private-route/PrivateRoute.tsx"],"names":["Navigate","Outlet","useLocation","useSelector","selectCurrentUser","PrivateRoute","redirectTo","currentUser","location","console","log","from"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;;AAQA,MAAMC,YAAY,GAAG,QAA6B;AAAA;;AAAA,MAA5B;AAAEC,IAAAA;AAAF,GAA4B;AAChD,QAAMC,WAAW,GAAGJ,WAAW,CAACC,iBAAD,CAA/B;AACA,MAAII,QAAQ,GAAGN,WAAW,EAA1B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,IAAAA;AAAF,GAAZ;AACA,MAAIA,WAAJ,EACE,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAED,UAAd;AAA0B,IAAA,KAAK,EAAE;AAAEK,MAAAA,IAAI,EAAEH;AAAR,KAAjC;AAAqD,IAAA,OAAO;AAA5D;AAAA;AAAA;AAAA;AAAA,UAAP;AAEF,sBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CARD;;GAAMH,Y;UACgBF,W,EACLD,W;;;KAFXG,Y;AAUN,eAAeA,YAAf","sourcesContent":["import { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectCurrentUser } from '../../redux/user/user-selector';\n\nimport type { RootState } from '../../redux/store';\n\ninterface PRProps {\n  redirectTo: string;\n}\n\nconst PrivateRoute = ({ redirectTo }: PRProps) => {\n  const currentUser = useSelector(selectCurrentUser);\n  let location = useLocation();\n  console.log({ currentUser });\n  if (currentUser)\n    return <Navigate to={redirectTo} state={{ from: location }} replace />;\n\n  return <Outlet />;\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}