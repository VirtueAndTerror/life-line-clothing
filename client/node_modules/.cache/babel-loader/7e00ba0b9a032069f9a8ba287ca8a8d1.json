{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { collection } from 'firebase/firestore';\nimport { db } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop-types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = collection(db, 'collections'); // onSnapshot(\n  //   collectionRef,\n  //   (snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   },\n  //   (error) => dispatch(fetchCollectionsFailure(error.message))\n  // );\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/redux/shop/shop-saga.tsx"],"names":["takeEvery","collection","db","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SAAqBC,UAArB,QAAuC,oBAAvC;AACA,SAEEC,EAFF,QAGO,+BAHP;AAUA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,QAAMC,aAAa,GAAGN,UAAU,CAACC,EAAD,EAAK,aAAL,CAAhC,CAFuC,CAIvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACD,OAAO,UAAUM,qBAAV,GAAkC;AACvC,QAAMR,SAAS,CACbG,eAAe,CAACM,uBADH,EAEbL,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\n\nimport { onSnapshot, collection } from 'firebase/firestore';\nimport {\n  convertCollectionsSnapshotToMap,\n  db,\n} from '../../firebase/firebase.utils';\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from './shop-actions';\n\nimport ShopActionTypes from './shop-types';\n\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = collection(db, 'collections');\n\n  // onSnapshot(\n  //   collectionRef,\n  //   (snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   },\n  //   (error) => dispatch(fetchCollectionsFailure(error.message))\n  // );\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}