{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectShopCollections = createSelector(selectShop, shop => shop.collections);\nexport const selectCollection = collectionUrlParam => createSelector(selectShopCollections, collections => collections ? collections[collectionUrlParam] : null);\nexport const selectCollectionsForPreview = createSelector(selectShopCollections, collections => //@ts-ignore\ncollections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectIsCollectionFetching = createSelector(selectShop, shop => shop.isFetchig);","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/redux/shop/shop-selectors.tsx"],"names":["createSelector","selectShop","state","shop","selectShopCollections","collections","selectCollection","collectionUrlParam","selectCollectionsForPreview","Object","keys","map","key","selectIsCollectionFetching","isFetchig"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAQA,MAAMC,UAAU,GAAIC,KAAD,IAAsBA,KAAK,CAACC,IAA/C;;AAEA,OAAO,MAAMC,qBAAqB,GAAGJ,cAAc,CACjDC,UADiD,EAEhDE,IAAD,IAAUA,IAAI,CAACE,WAFkC,CAA5C;AAKP,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAC9BP,cAAc,CAACI,qBAAD,EAAyBC,WAAD,IACpCA,WAAW,GAAGA,WAAW,CAACE,kBAAD,CAAd,GAAqC,IADpC,CADT;AAKP,OAAO,MAAMC,2BAA2B,GAAGR,cAAc,CACvDI,qBADuD,EAEtDC,WAAD,IACE;AACAA,WAAW,GAAGI,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBM,GAAzB,CAA8BC,GAAD,IAASP,WAAW,CAACO,GAAD,CAAjD,CAAH,GAA6D,EAJnB,CAAlD;AAOP,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACtDC,UADsD,EAErDE,IAAD,IAAUA,IAAI,CAACW,SAFuC,CAAjD","sourcesContent":["import { createSelector } from 'reselect';\nimport type { RootState } from '../store';\nimport type { Collections } from '../../interfaces';\n\ntype Map = {\n  [key: string]: Collections;\n};\n\nconst selectShop = (state: RootState) => state.shop;\n\nexport const selectShopCollections = createSelector(\n  selectShop,\n  (shop) => shop.collections\n);\n\nexport const selectCollection = (collectionUrlParam: string) =>\n  createSelector(selectShopCollections, (collections: Map) =>\n    collections ? collections[collectionUrlParam] : null\n  );\n\nexport const selectCollectionsForPreview = createSelector(\n  selectShopCollections,\n  (collections) =>\n    //@ts-ignore\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\n);\n\nexport const selectIsCollectionFetching = createSelector(\n  selectShop,\n  (shop) => shop.isFetchig\n);\n"]},"metadata":{},"sourceType":"module"}