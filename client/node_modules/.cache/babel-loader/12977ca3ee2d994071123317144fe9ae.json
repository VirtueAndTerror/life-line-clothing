{"ast":null,"code":"import ShopActionTypes from './shop-types';\nimport { convertCollectionsSnapshotToMap, db } from '../../firebase/firebase.utils';\nimport { onSnapshot, collection } from 'firebase/firestore';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = collection(db, 'collections');\n    dispatch(fetchCollectionsStart());\n    const unsusbscribe = onSnapshot(collectionRef, snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); // updateCollections(collectionsMap);\n\n      setIsLoading(false);\n    });\n  };\n};\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/redux/shop/shop-actions.tsx"],"names":["ShopActionTypes","convertCollectionsSnapshotToMap","db","onSnapshot","collection","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","unsusbscribe","snapshot","collectionsMap","setIsLoading","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","payload"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SACEC,+BADF,EAEEC,EAFF,QAGO,+BAHP;AAIA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oBAAvC;AAMA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEN,eAAe,CAACO;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAmB;AACxB,UAAMC,aAAa,GAAGN,UAAU,CAACF,EAAD,EAAK,aAAL,CAAhC;AACAO,IAAAA,QAAQ,CAACJ,qBAAqB,EAAtB,CAAR;AAEA,UAAMM,YAAY,GAAGR,UAAU,CAACO,aAAD,EAAiBE,QAAD,IAAc;AAC3D,YAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD,CAD2D,CAG3D;;AAEAE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAN8B,CAA/B;AAOD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMC,uBAAuB,GAAIF,cAAD,KAA0B;AAC/DP,EAAAA,IAAI,EAAEN,eAAe,CAACgB,yBADyC;AAE/DC,EAAAA,OAAO,EAAEJ;AAFsD,CAA1B,CAAhC","sourcesContent":["import ShopActionTypes from './shop-types';\n\nimport {\n  convertCollectionsSnapshotToMap,\n  db,\n} from '../../firebase/firebase.utils';\nimport { onSnapshot, collection } from 'firebase/firestore';\n\nexport interface FetchCollectionsStartAction {\n  type: ShopActionTypes.FETCH_COLLECTIONS_START;\n}\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch: any) => {\n    const collectionRef = collection(db, 'collections');\n    dispatch(fetchCollectionsStart());\n\n    const unsusbscribe = onSnapshot(collectionRef, (snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\n      // updateCollections(collectionsMap);\n\n      setIsLoading(false);\n    });\n  };\n};\n\nexport const fetchCollectionsSuccess = (collectionsMap: any) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n});\n"]},"metadata":{},"sourceType":"module"}