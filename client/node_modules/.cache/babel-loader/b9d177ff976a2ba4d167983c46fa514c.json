{"ast":null,"code":"var _jsxFileName = \"/home/arnaldo/web-projects/portfolio/life-line-app/src/pages/shop/ShopPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { connect } from 'react-redux';\n/* Firebase */\n\nimport { updateCollections } from '../../redux/shop/shop-actions';\n\n/* Components */\nimport Spinner from '../../components/spinner/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShopPage = _ref => {\n  _s();\n\n  let {\n    updateCollections\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(true);\n  const ApiUrl = 'https://firestore.googleapis.com/v1/projects/YOUR_PROJECT_ID/databases/(default)/documents/collections';\n  useEffect(() => {\n    fetch(ApiUrl).then(res => res.json()).then(collections => console.log(collections)); // const collectionRef = collection(db, 'collections');\n    // const unsusbscribe = onSnapshot(collectionRef, (snapshot) => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   setIsLoading(false);\n    // });\n\n    /* return () => unsusbscribe(); */\n  }, [\n    /* updateCollections */\n  ]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 45\n    }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 59\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n/* Redux w/Typescript */\n\n\n_s(ShopPage, \"Yt82d/dvZsn5nYh5sqDQjv+rJ38=\");\n\n_c = ShopPage;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nconst connector = connect(null, mapDispatchToProps);\nexport default _c2 = connector(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShopPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/pages/shop/ShopPage.tsx"],"names":["useEffect","useState","Outlet","connect","updateCollections","Spinner","ShopPage","isLoading","setIsLoading","ApiUrl","fetch","then","res","json","collections","console","log","mapDispatchToProps","dispatch","collectionsMap","connector"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwC,aAAxC;AAEA;;AAMA,SAASC,iBAAT,QAAkC,+BAAlC;;AAGA;AACA,OAAOC,OAAP,MAAoB,kCAApB;;;AAIA,MAAMC,QAAQ,GAAG,QAAoC;AAAA;;AAAA,MAAnC;AAAEF,IAAAA;AAAF,GAAmC;AACnD,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMQ,MAAM,GACV,wGADF;AAEAT,EAAAA,SAAS,CACP,MAAM;AACJU,IAAAA,KAAK,CAACD,MAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,WAAD,IAAiBC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAFzB,EADI,CAKJ;AAEA;AACA;AAEA;AAEA;AACA;;AAEA;AACD,GAjBM,EAkBP;AACE;AADF,GAlBO,CAAT;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cAA4BP,SAAS,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAiB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAtD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CA9BD;AAgCA;;;GAhCMD,Q;;KAAAA,Q;;AAiCN,MAAMW,kBAAkB,GAAIC,QAAD,KAA4B;AACrDd,EAAAA,iBAAiB,EAAGe,cAAD,IACjBD,QAAQ,CAACd,iBAAiB,CAACe,cAAD,CAAlB;AAF2C,CAA5B,CAA3B;;AAKA,MAAMC,SAAS,GAAGjB,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAzB;AAIA,qBAAeG,SAAS,CAACd,QAAD,CAAxB","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { connect, ConnectedProps } from 'react-redux';\n\n/* Firebase */\nimport { collection, onSnapshot } from 'firebase/firestore';\nimport {\n  db,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop-actions';\nimport { AppDispatch } from '../../redux/store';\n\n/* Components */\nimport Spinner from '../../components/spinner/Spinner';\n\ninterface SPProps extends PropsFromRedux {}\n\nconst ShopPage = ({ updateCollections }: SPProps) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const ApiUrl =\n    'https://firestore.googleapis.com/v1/projects/YOUR_PROJECT_ID/databases/(default)/documents/collections';\n  useEffect(\n    () => {\n      fetch(ApiUrl)\n        .then((res) => res.json())\n        .then((collections) => console.log(collections));\n\n      // const collectionRef = collection(db, 'collections');\n\n      // const unsusbscribe = onSnapshot(collectionRef, (snapshot) => {\n      //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\n      //   updateCollections(collectionsMap);\n\n      //   setIsLoading(false);\n      // });\n\n      /* return () => unsusbscribe(); */\n    },\n    [\n      /* updateCollections */\n    ]\n  );\n\n  return (\n    <div className='shop-page'>{isLoading ? <Spinner /> : <Outlet />}</div>\n  );\n};\n\n/* Redux w/Typescript */\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  updateCollections: (collectionsMap: any) =>\n    dispatch(updateCollections(collectionsMap)),\n});\n\nconst connector = connect(null, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(ShopPage);\n"]},"metadata":{},"sourceType":"module"}