{"ast":null,"code":"var _jsxFileName = \"/home/arnaldo/web-projects/portfolio/life-line-app/src/components/sign-in/SignIn.tsx\";\nimport * as React from 'react';\n/* Components */\n\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\n/* Firebase */\n\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\n/* CSS */\n\nimport './sign-in.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        const UserCredential = await signInWithEmailAndPassword(auth, email, password);\n        console.log(UserCredential);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (err) {\n        console.error('Failed signing in', err);\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target; // @ts-ignore\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      error: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          name: \"email\",\n          label: \"Email\",\n          value: this.state.email,\n          handleChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"password\",\n          label: \"Password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            onClick: signInWithGoogle,\n            isGoogleSignIn: true,\n            children: \"Sign in with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/components/sign-in/SignIn.tsx"],"names":["React","FormInput","CustomButton","signInWithEmailAndPassword","signInWithGoogle","auth","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","email","password","state","UserCredential","console","log","setState","err","error","handleChange","value","name","target","render"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\n/* Components */\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\n\n/* Firebase */\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\n\n/* CSS */\nimport './sign-in.scss';\n\ninterface SignInState {\n  email: string;\n  password: string;\n  error: object;\n}\n\ninterface SignInProps {}\n\nclass SignIn extends React.Component<SignInProps, SignInState> {\n  constructor(props: SignInProps) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      error: {},\n    };\n  }\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n\n    try {\n      const UserCredential = await signInWithEmailAndPassword(\n        auth,\n        email,\n        password\n      );\n      console.log(UserCredential);\n      this.setState({ email: '', password: '' });\n    } catch (err) {\n      console.error('Failed signing in', err);\n    }\n  };\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = e.target;\n    // @ts-ignore\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className='sign-in'>\n        <h2 className='title'>I already have an account</h2>\n        <span>Sign in with your email and password</span>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            type='email'\n            name='email'\n            label='Email'\n            value={this.state.email}\n            handleChange={this.handleChange}\n            required\n          />\n\n          <FormInput\n            type='password'\n            name='password'\n            label='Password'\n            value={this.state.password}\n            handleChange={this.handleChange}\n            required\n          />\n\n          <div className='buttons'>\n            <CustomButton type='submit'>Sign in</CustomButton>\n            <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\n              Sign in with Google\n            </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}