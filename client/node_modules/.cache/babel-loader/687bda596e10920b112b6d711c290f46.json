{"ast":null,"code":"var _jsxFileName = \"/home/arnaldo/web-projects/portfolio/life-line-app/src/components/sign-in/SignIn.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState } from 'react';\n/* Components */\n\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\n/* Firebase */\n\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\n/* CSS */\n\nimport './sign-in.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = userCredentials;\n\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      setCredentials({\n        email: '',\n        password: ''\n      });\n    } catch (err) {\n      const error = err;\n      const errorCode = error.code;\n      errorCode === 'auth/user-not-found' ? setErrorMsg('Username and password no not match') : console.error(error);\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target; // @ts-ignore\n\n    setCredentials({\n      [name]: value\n    });\n  };\n\n  const {\n    email = '',\n    password = ''\n  } = userCredentials;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        label: \"Email\",\n        value: email,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        value: password,\n        handleChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          onClick: signInWithGoogle,\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMsg\",\n        children: errorMsg && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"lXKSOtdSrVC9dfqco3VvI5qRSKw=\");\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/components/sign-in/SignIn.tsx"],"names":["React","useState","FormInput","CustomButton","signInWithEmailAndPassword","signInWithGoogle","auth","SignIn","userCredentials","setCredentials","email","password","errorMsg","setErrorMsg","handleSubmit","e","preventDefault","err","error","errorCode","code","console","handleChange","value","name","target"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\n\n/* Components */\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\n\n/* Firebase */\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\n\n/* CSS */\nimport './sign-in.scss';\nimport { FirebaseError } from 'firebase/app';\n\ninterface SignInState {\n  email: string;\n  password: string;\n  // error?: { msg: string } | null;\n}\n\ninterface SignInProps {}\n\nconst SignIn: React.FC<SignInProps> = () => {\n  const [userCredentials, setCredentials] = useState<SignInState>({\n    email: '',\n    password: '',\n  });\n  const [errorMsg, setErrorMsg] = useState<string>('');\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const { email, password } = userCredentials;\n\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n\n      setCredentials({ email: '', password: '' });\n    } catch (err: any) {\n      const error: FirebaseError = err;\n      const errorCode = error.code;\n\n      errorCode === 'auth/user-not-found'\n        ? setErrorMsg('Username and password no not match')\n        : console.error(error);\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = e.target;\n    // @ts-ignore\n    setCredentials({ [name]: value });\n  };\n\n  const { email = '', password = '' } = userCredentials;\n\n  return (\n    <div className='sign-in'>\n      <h2 className='title'>I already have an account</h2>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          type='email'\n          name='email'\n          label='Email'\n          value={email}\n          handleChange={handleChange}\n          required\n        />\n\n        <FormInput\n          type='password'\n          name='password'\n          label='Password'\n          value={password}\n          handleChange={handleChange}\n          required\n        />\n\n        <div className='buttons'>\n          <CustomButton type='submit'>Sign in</CustomButton>\n          <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\n            Sign in with Google\n          </CustomButton>\n        </div>\n        <div className='errorMsg'>{errorMsg && <span>{errorMsg}</span>}</div>\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}