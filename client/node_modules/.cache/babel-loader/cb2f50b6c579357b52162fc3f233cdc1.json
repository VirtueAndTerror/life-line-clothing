{"ast":null,"code":"var _jsxFileName = \"/home/arnaldo/web-projects/portfolio/life-line-app/src/components/private-route/PrivateRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { selectCurrentUser } from '../../redux/user/user-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    currentUser,\n    redirectTo\n  } = _ref;\n  let location = useLocation();\n  console.log({\n    currentUser\n  });\n  if (currentUser) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: redirectTo,\n    state: {\n      from: location\n    },\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n/* Redux w/ Typescript */\n\n\n_s(PrivateRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = PrivateRoute;\n\nconst mapStateToProps = state => ({\n  currentUser: selectCurrentUser(state)\n});\n\nconst connector = connect(mapStateToProps);\nexport default _c2 = connector(PrivateRoute);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/components/private-route/PrivateRoute.tsx"],"names":["Navigate","Outlet","useLocation","connect","selectCurrentUser","PrivateRoute","currentUser","redirectTo","location","console","log","from","mapStateToProps","state","connector"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,OAAT,QAAwC,aAAxC;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;;AAQA,MAAMC,YAAY,GAAG,QAA0C;AAAA;;AAAA,MAAzC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAyC;AAC7D,MAAIC,QAAQ,GAAGN,WAAW,EAA1B;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,IAAAA;AAAF,GAAZ;AACA,MAAIA,WAAJ,EACE,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAEC,UAAd;AAA0B,IAAA,KAAK,EAAE;AAAEI,MAAAA,IAAI,EAAEH;AAAR,KAAjC;AAAqD,IAAA,OAAO;AAA5D;AAAA;AAAA;AAAA;AAAA,UAAP;AAEF,sBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAPD;AASA;;;GATMH,Y;UACWH,W;;;KADXG,Y;;AAUN,MAAMO,eAAe,GAAIC,KAAD,KAAuB;AAC7CP,EAAAA,WAAW,EAAEF,iBAAiB,CAACS,KAAD;AADe,CAAvB,CAAxB;;AAIA,MAAMC,SAAS,GAAGX,OAAO,CAACS,eAAD,CAAzB;AAIA,qBAAeE,SAAS,CAACT,YAAD,CAAxB","sourcesContent":["import { Navigate, Outlet, useLocation } from 'react-router-dom';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { selectCurrentUser } from '../../redux/user/user-selector';\n\nimport type { RootState } from '../../redux/store';\n\ninterface PRProps extends PropsFromRedux {\n  redirectTo: string;\n}\n\nconst PrivateRoute = ({ currentUser, redirectTo }: PRProps) => {\n  let location = useLocation();\n  console.log({ currentUser });\n  if (currentUser)\n    return <Navigate to={redirectTo} state={{ from: location }} replace />;\n\n  return <Outlet />;\n};\n\n/* Redux w/ Typescript */\nconst mapStateToProps = (state: RootState) => ({\n  currentUser: selectCurrentUser(state),\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}