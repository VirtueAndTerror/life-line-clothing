{"ast":null,"code":"import ShopActionTypes from './shop-types';\nimport { convertCollectionsSnapshotToMap, db } from '../../firebase/firebase.utils';\nimport { onSnapshot, collection } from 'firebase/firestore';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAsync = () => {\n  const collectionRef = collection(db, 'collections');\n  const unsusbscribe = onSnapshot(collectionRef, snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    updateCollections(collectionsMap);\n    setIsLoading(false);\n  });\n};","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/redux/shop/shop-actions.tsx"],"names":["ShopActionTypes","convertCollectionsSnapshotToMap","db","onSnapshot","collection","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","collectionRef","unsusbscribe","snapshot","collectionsMap","updateCollections","setIsLoading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,+BADF,EAEEC,EAFF,QAGO,+BAHP;AAIA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,oBAAvC;AAMA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEN,eAAe,CAACO;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,QAAMC,aAAa,GAAGL,UAAU,CAACF,EAAD,EAAK,aAAL,CAAhC;AAEA,QAAMQ,YAAY,GAAGP,UAAU,CAACM,aAAD,EAAiBE,QAAD,IAAc;AAC3D,UAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AAEAE,IAAAA,iBAAiB,CAACD,cAAD,CAAjB;AAEAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAN8B,CAA/B;AAOD,CAVM","sourcesContent":["import ShopActionTypes from './shop-types';\nimport {\n  convertCollectionsSnapshotToMap,\n  db,\n} from '../../firebase/firebase.utils';\nimport { onSnapshot, collection } from 'firebase/firestore';\n\nexport interface FetchCollectionsStartAction {\n  type: ShopActionTypes.FETCH_COLLECTIONS_START;\n}\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  const collectionRef = collection(db, 'collections');\n\n  const unsusbscribe = onSnapshot(collectionRef, (snapshot) => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\n    updateCollections(collectionsMap);\n\n    setIsLoading(false);\n  });\n};\n"]},"metadata":{},"sourceType":"module"}