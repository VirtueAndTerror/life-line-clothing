{"ast":null,"code":"var _jsxFileName = \"/home/arnaldo/web-projects/portfolio/my-app/src/components/private-route/PrivateRoute.tsx\";\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { selectCurrentUser } from '../../redux/user/user-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  let {\n    currentUser,\n    redirectTo\n  } = _ref;\n  console.log(currentUser);\n  if (currentUser) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: redirectTo,\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n/* Redux w/ Typescript */\n\n\n_c = PrivateRoute;\n\nconst mapStateToProps = state => ({\n  currentUser: selectCurrentUser(state)\n});\n\nconst connector = connect(mapStateToProps);\nexport default _c2 = connector(PrivateRoute);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/my-app/src/components/private-route/PrivateRoute.tsx"],"names":["Navigate","Outlet","connect","selectCurrentUser","PrivateRoute","currentUser","redirectTo","console","log","mapStateToProps","state","connector"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwC,aAAxC;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;;AAQA,MAAMC,YAAY,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAyC;AAC7DC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,MAAIA,WAAJ,EAAiB,oBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAEC,UAAd;AAA0B,IAAA,OAAO;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AAEjB,sBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CALD;AAOA;;;KAPMF,Y;;AAQN,MAAMK,eAAe,GAAIC,KAAD,KAAuB;AAC7CL,EAAAA,WAAW,EAAEF,iBAAiB,CAACO,KAAD;AADe,CAAvB,CAAxB;;AAIA,MAAMC,SAAS,GAAGT,OAAO,CAACO,eAAD,CAAzB;AAIA,qBAAeE,SAAS,CAACP,YAAD,CAAxB","sourcesContent":["import { Navigate, Outlet } from 'react-router-dom';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { selectCurrentUser } from '../../redux/user/user-selector';\n\nimport type { RootState } from '../../redux/store';\n\ninterface PRProps extends PropsFromRedux {\n  redirectTo: string;\n}\n\nconst PrivateRoute = ({ currentUser, redirectTo }: PRProps) => {\n  console.log(currentUser);\n  if (currentUser) return <Navigate to={redirectTo} replace />;\n\n  return <Outlet />;\n};\n\n/* Redux w/ Typescript */\nconst mapStateToProps = (state: RootState) => ({\n  currentUser: selectCurrentUser(state),\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}