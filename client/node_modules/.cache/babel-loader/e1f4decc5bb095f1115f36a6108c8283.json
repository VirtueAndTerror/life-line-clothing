{"ast":null,"code":"import SHOP_DATA from './shop-data';\nimport ShopActionTypes from './shop-types';\nconst INITIAL_STATE = {\n  collections: SHOP_DATA,\n  isFetching: false,\n  errorMsg: ''\n};\n\nconst shopReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ShopActionTypes.FETCH_COLLECTIONS_START:\n      return { ...state,\n        isFetching: true\n      };\n\n    case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return { ...state,\n        collections: action.payload,\n        isFetching: false\n      };\n\n    case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return { ...state,\n        isFetching: false,\n        errorMsg: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/redux/shop/shop-reducer.tsx"],"names":["SHOP_DATA","ShopActionTypes","INITIAL_STATE","collections","isFetching","errorMsg","shopReducer","state","action","type","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","payload","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4C,cAA5C;AASA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAEH,SADO;AAEpBI,EAAAA,UAAU,EAAE,KAFQ;AAGpBC,EAAAA,QAAQ,EAAE;AAHU,CAAtB;;AAMA,MAAMC,WAAoB,GAAG,YAA+C;AAAA,MAA9CC,KAA8C,uEAAtCL,aAAsC;AAAA,MAAvBM,MAAuB;;AAC1E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,eAAe,CAACS,uBAArB;AACE,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKH,eAAe,CAACU,yBAArB;AACE,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,WAAW,EAAEK,MAAM,CAACI,OAFf;AAGLR,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF,SAAKH,eAAe,CAACY,yBAArB;AACE,aAAO,EACL,GAAGN,KADE;AAELH,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,QAAQ,EAAEG,MAAM,CAACI;AAHZ,OAAP;;AAKF;AACE,aAAOL,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,eAAeD,WAAf","sourcesContent":["import SHOP_DATA from './shop-data';\nimport ShopActionTypes, { ShopAction } from './shop-types';\nimport type { Reducer } from 'redux';\n\nexport interface ShopState {\n  readonly collections: typeof SHOP_DATA;\n  readonly isFetchig: boolean;\n  readonly errorMsg: string;\n}\n\nconst INITIAL_STATE = {\n  collections: SHOP_DATA,\n  isFetching: false,\n  errorMsg: '',\n};\n\nconst shopReducer: Reducer = (state = INITIAL_STATE, action: ShopAction) => {\n  switch (action.type) {\n    case ShopActionTypes.FETCH_COLLECTIONS_START:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return {\n        ...state,\n        collections: action.payload,\n        isFetching: false,\n      };\n    case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;\n"]},"metadata":{},"sourceType":"module"}