{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nconst middlewares = [];\nprocess.env.NODE_ENV === 'development' && middlewares.push(logger);\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)));\nexport const persistor = persistStore(store); // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/my-app/src/redux/store.tsx"],"names":["createStore","applyMiddleware","persistStore","composeWithDevTools","logger","rootReducer","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,WAAW,GAAG,EAApB;AACAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CH,WAAW,CAACI,IAAZ,CAAiBN,MAAjB,CAA1C;AAEA,OAAO,MAAMO,KAAK,GAAGX,WAAW,CAC9BK,WAD8B,EAE9BF,mBAAmB,CAACF,eAAe,CAAC,GAAGK,WAAJ,CAAhB,CAFW,CAAzB;AAKP,OAAO,MAAMM,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA9B,C,CAEP","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport logger from 'redux-logger';\n\nimport rootReducer from './root-reducer';\n\nconst middlewares = [];\nprocess.env.NODE_ENV === 'development' && middlewares.push(logger);\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middlewares))\n);\n\nexport const persistor = persistStore(store);\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n"]},"metadata":{},"sourceType":"module"}