{"ast":null,"code":"var _jsxFileName = \"/home/arnaldo/web-projects/portfolio/life-line-app/src/pages/shop/ShopPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { connect, useDispatch } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n/* Redux & Redux-Thunk */\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop-saga';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop-selectors';\n/* Components */\n\nimport Spinner from '../../components/spinner/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShopPage = props => {\n  _s();\n\n  const {\n    isCollectionFetching\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // The data fetching logic was extracted to redux-thunk.\n    dispatch(fetchCollectionsStart());\n  }, [fetchCollectionsStart]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: isCollectionFetching ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShopPage, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ShopPage;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n/* Redux w/Typescript */\n\nconst connector = connect(mapStateToProps);\nexport default _c2 = connector(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShopPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/pages/shop/ShopPage.tsx"],"names":["useEffect","Outlet","connect","useDispatch","createStructuredSelector","fetchCollectionsStart","selectIsCollectionFetching","Spinner","ShopPage","props","isCollectionFetching","dispatch","mapStateToProps","connector"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,OAAT,EAAkCC,WAAlC,QAAqD,aAArD;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA;;AAEA,SAASC,qBAAT,QAAsC,4BAAtC;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AAEA;;AACA,OAAOC,OAAP,MAAoB,kCAApB;;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAoB;AAAA;;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAA2BD,KAAjC;AACA,QAAME,QAAQ,GAAGR,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd;AACAW,IAAAA,QAAQ,CAACN,qBAAqB,EAAtB,CAAR;AACD,GAHQ,EAGN,CAACA,qBAAD,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGK,oBAAoB,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAiB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADxC;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAdD;;GAAMF,Q;UAEaL,W;;;KAFbK,Q;AAgBN,MAAMI,eAAe,GAAGR,wBAAwB,CAAC;AAC/CM,EAAAA,oBAAoB,EAAEJ;AADyB,CAAD,CAAhD;AAIA;;AAEA,MAAMO,SAAS,GAAGX,OAAO,CAACU,eAAD,CAAzB;AAIA,qBAAeC,SAAS,CAACL,QAAD,CAAxB","sourcesContent":["import { useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { connect, ConnectedProps, useDispatch } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\n/* Redux & Redux-Thunk */\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop-saga';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop-selectors';\n\n/* Components */\nimport Spinner from '../../components/spinner/Spinner';\n\ninterface SPProps extends PropsFromRedux {}\n\nconst ShopPage = (props: SPProps) => {\n  const { isCollectionFetching } = props;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // The data fetching logic was extracted to redux-thunk.\n    dispatch(fetchCollectionsStart());\n  }, [fetchCollectionsStart]);\n\n  return (\n    <div className='shop-page'>\n      {isCollectionFetching ? <Spinner /> : <Outlet />}\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n});\n\n/* Redux w/Typescript */\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(ShopPage);\n"]},"metadata":{},"sourceType":"module"}