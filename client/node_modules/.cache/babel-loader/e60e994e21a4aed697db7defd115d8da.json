{"ast":null,"code":"// @ts-nocheck\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { convertCollectionsSnapshotToMap, db } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop-actions';\nimport ShopActionTypes from './shop-types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = collection(db, 'collections');\n    const snapshot = getDocs(collectionRef);\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (err) {\n    yield put(fetchCollectionsFailure(err));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/redux/shop/shop-saga.tsx"],"names":["takeLatest","call","put","collection","getDocs","convertCollectionsSnapshotToMap","db","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","snapshot","collectionsMap","err","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA;AACA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SACEC,+BADF,EAEEC,EAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AACA,MAAI;AACF,UAAMC,aAAa,GAAGV,UAAU,CAACG,EAAD,EAAK,aAAL,CAAhC;AAEA,UAAMQ,QAAQ,GAAGV,OAAO,CAACS,aAAD,CAAxB;AAEA,UAAME,cAAc,GAAG,MAAMd,IAAI,CAC/BI,+BAD+B,EAE/BS,QAF+B,CAAjC;AAIA,UAAMZ,GAAG,CAACK,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACD,GAVD,CAUE,OAAOC,GAAP,EAAiB;AACjB,UAAMd,GAAG,CAACM,uBAAuB,CAACQ,GAAD,CAAxB,CAAT;AACD;AACF;AACD,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,UAAU,CACdS,eAAe,CAACS,uBADF,EAEdR,qBAFc,CAAhB;AAID","sourcesContent":["// @ts-nocheck\nimport { takeLatest, call, put } from 'redux-saga/effects';\n\nimport { collection, getDocs } from 'firebase/firestore';\nimport {\n  convertCollectionsSnapshotToMap,\n  db,\n} from '../../firebase/firebase.utils';\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from './shop-actions';\n\nimport ShopActionTypes from './shop-types';\n\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  try {\n    const collectionRef = collection(db, 'collections');\n\n    const snapshot = getDocs(collectionRef);\n\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (err: any) {\n    yield put(fetchCollectionsFailure(err));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}