{"ast":null,"code":"var _jsxFileName = \"/home/arnaldo/web-projects/portfolio/my-app/src/components/collections-overview/CollectionsOverview.tsx\";\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCollectionsForPreview } from '../../redux/shop/shop-selectors';\nimport CollectionPreview from '../collection-preview/CollectionPreview';\nimport './collections-overvies.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CollectionsOverview = _ref => {\n  let {\n    collections\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"collections-overview\",\n    children: collections.map(_ref2 => {\n      let {\n        id,\n        ...otherCollectionProps\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(CollectionPreview, {\n        id: id,\n        ...otherCollectionProps\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n};\n\n_c = CollectionsOverview;\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsForPreview\n});\nconst connector = connect(mapStateToProps);\nexport default _c2 = connector(CollectionsOverview);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverview\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/my-app/src/components/collections-overview/CollectionsOverview.tsx"],"names":["connect","createStructuredSelector","selectCollectionsForPreview","CollectionPreview","CollectionsOverview","collections","map","id","otherCollectionProps","mapStateToProps","connector"],"mappings":";AAAA,SAASA,OAAT,QAAwC,aAAxC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAGA,SAASC,2BAAT,QAA4C,iCAA5C;AAEA,OAAOC,iBAAP,MAA8B,yCAA9B;AAEA,OAAO,6BAAP;;;AAMA,MAAMC,mBAAmB,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBAC1B;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,cACGA,WAAW,CAACC,GAAZ,CAAgB;AAAA,UAAC;AAAEC,QAAAA,EAAF;AAAM,WAAGC;AAAT,OAAD;AAAA,0BACf,QAAC,iBAAD;AAA4B,QAAA,EAAE,EAAED,EAAhC;AAAA,WAAwCC;AAAxC,SAAwBD,EAAxB;AAAA;AAAA;AAAA;AAAA,cADe;AAAA,KAAhB;AADH;AAAA;AAAA;AAAA;AAAA,UAD0B;AAAA,CAA5B;;KAAMH,mB;AAQN,MAAMK,eAAe,GAAGR,wBAAwB,CAAC;AAC/CI,EAAAA,WAAW,EAAEH;AADkC,CAAD,CAAhD;AAIA,MAAMQ,SAAS,GAAGV,OAAO,CAACS,eAAD,CAAzB;AAIA,qBAAeC,SAAS,CAACN,mBAAD,CAAxB","sourcesContent":["import { connect, ConnectedProps } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport type { Collections } from '../../interfaces';\n\nimport { selectCollectionsForPreview } from '../../redux/shop/shop-selectors';\n\nimport CollectionPreview from '../collection-preview/CollectionPreview';\n\nimport './collections-overvies.scss';\n\ninterface COProps extends PropsFromRedux {\n  collections: Collections[];\n}\n\nconst CollectionsOverview = ({ collections }: COProps) => (\n  <div className='collections-overview'>\n    {collections.map(({ id, ...otherCollectionProps }) => (\n      <CollectionPreview key={id} id={id} {...otherCollectionProps} />\n    ))}\n  </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsForPreview,\n});\n\nconst connector = connect(mapStateToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(CollectionsOverview);\n"]},"metadata":{},"sourceType":"module"}