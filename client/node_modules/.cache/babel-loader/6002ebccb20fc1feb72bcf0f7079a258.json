{"ast":null,"code":"var _jsxFileName = \"/home/arnaldo/web-projects/portfolio/my-app/src/components/custom-button/CustomButton.tsx\";\nimport './custom-button.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomButton = _ref => {\n  let {\n    children,\n    isGoogleSignIn,\n    inverted,\n    ...otherProps\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    // Now if we have a type='submit', the button will get that\n    _jsxDEV(\"button\", {\n      className: `${inverted ? 'inverted' : ''}${isGoogleSignIn ? 'google-sign-in' : ''} custom-button`,\n      ...otherProps,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }, this)\n  );\n};\n\n_c = CustomButton;\nexport default CustomButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/my-app/src/components/custom-button/CustomButton.tsx"],"names":["CustomButton","children","isGoogleSignIn","inverted","otherProps"],"mappings":";AAAA,OAAO,sBAAP;;;AAUA,MAAMA,YAAY,GAAG;AAAA,MAAC;AACpBC,IAAAA,QADoB;AAEpBC,IAAAA,cAFoB;AAGpBC,IAAAA,QAHoB;AAIpB,OAAGC;AAJiB,GAAD;AAAA;AAAA;AAMnB;AACA;AACE,MAAA,SAAS,EAAG,GAAED,QAAQ,GAAG,UAAH,GAAgB,EAAG,GACvCD,cAAc,GAAG,gBAAH,GAAsB,EACrC,gBAHH;AAAA,SAIME,UAJN;AAAA,gBAMGH;AANH;AAAA;AAAA;AAAA;AAAA;AAPmB;AAAA,CAArB;;KAAMD,Y;AAiBN,eAAeA,YAAf","sourcesContent":["import './custom-button.scss';\n\ninterface CBProps {\n  children: string;\n  type?: 'submit' | 'reset' | 'button';\n  onClick?: (e: React.FormEvent | React.ChangeEvent) => any;\n  isGoogleSignIn?: boolean;\n  inverted?: boolean;\n}\n\nconst CustomButton = ({\n  children,\n  isGoogleSignIn,\n  inverted,\n  ...otherProps\n}: CBProps) => (\n  // Now if we have a type='submit', the button will get that\n  <button\n    className={`${inverted ? 'inverted' : ''}${\n      isGoogleSignIn ? 'google-sign-in' : ''\n    } custom-button`}\n    {...otherProps}\n  >\n    {children}\n  </button>\n);\n\nexport default CustomButton;\n"]},"metadata":{},"sourceType":"module"}