{"ast":null,"code":"var _jsxFileName = \"/home/arnaldo/web-projects/portfolio/life-line-app/src/pages/shop/ShopPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop-selectors';\n\n/* Components */\nimport Spinner from '../../components/spinner/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShopPage = props => {\n  _s();\n\n  const {\n    isCollectionFetching,\n    fetchCollectionsStartAsync\n  } = props;\n  useEffect(() => {\n    fetchCollectionsStartAsync();\n  }, [fetchCollectionsStartAsync]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: isCollectionFetching ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShopPage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ShopPage;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n/* Redux w/Typescript */\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\nexport default _c2 = connector(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShopPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/pages/shop/ShopPage.tsx"],"names":["useEffect","Outlet","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","Spinner","ShopPage","props","isCollectionFetching","mapStateToProps","mapDispatchToProps","dispatch","connector"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwC,aAAxC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,QAA2C,iCAA3C;;AAIA;AACA,OAAOC,OAAP,MAAoB,kCAApB;;;AAMA,MAAMC,QAAQ,GAAIC,KAAD,IAAoB;AAAA;;AACnC,QAAM;AAAEC,IAAAA,oBAAF;AAAwBL,IAAAA;AAAxB,MAAuDI,KAA7D;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,0BAA0B;AAC3B,GAFQ,EAEN,CAACA,0BAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGK,oBAAoB,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAiB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADxC;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAZD;;GAAMF,Q;;KAAAA,Q;AAcN,MAAMG,eAAe,GAAGP,wBAAwB,CAAC;AAC/CM,EAAAA,oBAAoB,EAAEJ;AADyB,CAAD,CAAhD;AAIA;;AACA,MAAMM,kBAAkB,GACtBC,QADyB,KAErB;AACJR,EAAAA,0BAA0B,EAAE,MAAMQ,QAAQ,CAACR,0BAA0B,EAA3B;AADtC,CAFqB,CAA3B;;AAMA,MAAMS,SAAS,GAAGX,OAAO,CAACQ,eAAD,EAAkBC,kBAAlB,CAAzB;AAIA,qBAAeE,SAAS,CAACN,QAAD,CAAxB","sourcesContent":["import { useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop-actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop-selectors';\nimport { AppDispatch, AppThunk, RootState } from '../../redux/store';\nimport { ThunkDispatch } from 'redux-thunk';\n\n/* Components */\nimport Spinner from '../../components/spinner/Spinner';\nimport { ShopAction } from '../../redux/shop/shop-types';\nimport { AnyAction, Dispatch } from 'redux';\n\ninterface SPProps extends PropsFromRedux {}\n\nconst ShopPage = (props: SPProps) => {\n  const { isCollectionFetching, fetchCollectionsStartAsync } = props;\n\n  useEffect(() => {\n    fetchCollectionsStartAsync();\n  }, [fetchCollectionsStartAsync]);\n\n  return (\n    <div className='shop-page'>\n      {isCollectionFetching ? <Spinner /> : <Outlet />}\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n});\n\n/* Redux w/Typescript */\nconst mapDispatchToProps = (\n  dispatch: ThunkDispatch<RootState, undefined, ShopAction>\n) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype PropsFromRedux = ConnectedProps<typeof connector>;\n\nexport default connector(ShopPage);\n"]},"metadata":{},"sourceType":"module"}