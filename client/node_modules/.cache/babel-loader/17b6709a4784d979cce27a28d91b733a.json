{"ast":null,"code":"var _jsxFileName = \"/home/arnaldo/web-projects/portfolio/life-line-app/src/components/sign-in/SignIn.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useAppDispatch } from '../../redux/hooks';\n/* Components */\n\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\n/* Redux Actions */\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user-actions';\n/* CSS */\n\nimport './sign-in.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = () => {\n  _s();\n\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const dispatch = useAppDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = credentials;\n    dispatch(emailSignInStart(credentials));\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target; // @ts-ignore\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const {\n    errorMsg\n  } = this.state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        label: \"Email\",\n        value: this.state.email,\n        handleChange: this.handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        label: \"Password\",\n        value: this.state.password,\n        handleChange: this.handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: () => dispatch(googleSignInStart()),\n          isGoogleSignIn: true,\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMsg\",\n        children: errorMsg && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"KtBhkXijmWb2RSijL+gMcCLz68U=\", false, function () {\n  return [useAppDispatch];\n});\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/arnaldo/web-projects/portfolio/life-line-app/src/components/sign-in/SignIn.tsx"],"names":["React","useState","useAppDispatch","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","credentials","setCredentials","email","password","dispatch","handleSubmit","e","preventDefault","handleChange","value","name","target","setState","errorMsg","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useAppDispatch } from '../../redux/hooks';\n\n/* Components */\nimport FormInput from '../form-input/FormInput';\nimport CustomButton from '../custom-button/CustomButton';\n\n/* Redux Actions */\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from '../../redux/user/user-actions';\n\n/* CSS */\nimport './sign-in.scss';\nimport { AppDispatch } from '../../redux/store';\n\ninterface Credentials {\n  email: string;\n  password: string;\n}\n\nconst SignIn = () => {\n  const [credentials, setCredentials] = useState<Credentials>({\n    email: '',\n    password: '',\n  });\n  const dispatch = useAppDispatch();\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const { email, password } = credentials;\n\n    dispatch(emailSignInStart(credentials));\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name } = e.target;\n    // @ts-ignore\n    this.setState({ [name]: value });\n  };\n\n  const { errorMsg } = this.state;\n  return (\n    <div className='sign-in'>\n      <h2 className='title'>I already have an account</h2>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={this.handleSubmit}>\n        <FormInput\n          type='email'\n          name='email'\n          label='Email'\n          value={this.state.email}\n          handleChange={this.handleChange}\n          required\n        />\n\n        <FormInput\n          type='password'\n          name='password'\n          label='Password'\n          value={this.state.password}\n          handleChange={this.handleChange}\n          required\n        />\n\n        <div className='buttons'>\n          <CustomButton type='submit'>Sign in</CustomButton>\n          <CustomButton\n            type='button'\n            onClick={() => dispatch(googleSignInStart())}\n            isGoogleSignIn\n          >\n            Sign in with Google\n          </CustomButton>\n        </div>\n        <div className='errorMsg'>{errorMsg && <span>{errorMsg}</span>}</div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email: string, password: string) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}